'use strict';

window.addEventListener('DOMContentLoaded', () => {
    const body = document.querySelector('body'),
          wrapper = document.querySelector('.wrapper'),
          headerRow = document.querySelector('.header__row'),
          menu = document.querySelector('.menu'),
          iconMenu = document.querySelector('.icon-menu'),
          menuBody = document.querySelector('.menu__body'),
          menuLinks = document.querySelectorAll('.menu__link'),
          headerLang = document.querySelector(".header__lang");

    iconMenu.addEventListener('click', () => {
        iconMenu.classList.toggle('active');
        menuBody.classList.toggle('active');
        header.classList.toggle('lock');
        body.classList.toggle('lock');
    });


    let checkResize = function () {
        if (wrapper.clientWidth < 991.98) {
            menu.prepend(headerLang);
        }else if (wrapper.clientWidth > 991.98) {
            headerRow.append(headerLang);
        }

        // изменение высоты графика
        const uniqGraph = document.querySelector('.uniq__graph');
        if (wrapper.clientWidth < 767.98) {
            uniqGraph.style.cssText = `
                height: 300px
            `;
        }else if (wrapper.clientWidth > 767.98) {
            uniqGraph.style.cssText = `
                height: 546px
            `;
        }
    };
    checkResize();
    window.addEventListener('resize', checkResize);

    menuLinks.forEach(link => {
        link.addEventListener('click', () => {
            if (wrapper.clientWidth < 991.98) {
                iconMenu.classList.remove('active');
                menuBody.classList.remove('active');
                // wrapper.classList.remove('lock');
                header.classList.remove('lock');
                body.classList.remove('lock');
            }
        });
    });

// *================================================
    const doc = document.documentElement,
          header = document.querySelector('.header');

    let prevScroll = window.scrollY || doc.scrollTop;
    let curScroll;
    let direction = 0;
    let prevDirection = 0;


    
    let checkScroll = function () {
        curScroll = window.scrollY || doc.scrollTop;
        if (curScroll > prevScroll) {
            direction = 2;
        } else if (curScroll < prevScroll) {
            direction = 1;
        }

        if (direction !== prevDirection) {
            toggleHeader(direction, curScroll);
        }

        if (window.scrollY === 0) {
            header.style.background = 'transparent';
            header.style.padding = '35px 45px 31px';
        }else {
            header.style.background = '#040300';
            header.style.padding = '20px 45px';
        }

        prevScroll = curScroll;
    };

    let toggleHeader = function (direction, curScroll) {
        if (direction === 2 && curScroll > 60) {
            header.classList.add('nav-up');
            prevDirection = direction;
        } else if (direction === 1) {
            header.classList.remove('nav-up');
            prevDirection = direction;
        }
    };

    
    checkScroll();
    window.addEventListener('scroll', checkScroll);
    //* Плавный скролл===========================================================
    $(document).ready(function () {
        $("a[href*='#']").on("click", function (e) {
            var anchor = $(this);
            $('html, body').stop().animate({
                scrollTop: $(anchor.attr('href')).offset().top
            }, 777);
            e.preventDefault();
            return false;
        });
    });
    //* Плавный скролл===========================================================

    //* Список вопросов===========================================================
    const itemStartBtn = document.querySelectorAll(".item-start__qq-btn button"),
          itemStartText = document.querySelectorAll(".item-start__qq-text");

    

    itemStartBtn.forEach((btn, i) => {
        btn.addEventListener('click', () => {
            if (btn.classList.contains('active')) {
                btn.classList.remove('active');
                btn.textContent = 'Ответы на возможные вопросы';
                itemStartText[i].classList.remove('active');
                itemStartText[i].style.height = '0';
            }else {
                itemStartBtn.forEach((btn, i) => {
                    btn.classList.remove('active');
                    btn.textContent = 'Ответы на возможные вопросы';
                    itemStartText[i].classList.remove('active');
                    itemStartText[i].style.height = '0';
                });
                btn.classList.add('active');
                btn.textContent = 'Cкрыть ответы';
                itemStartText[i].classList.add('active');
                itemStartText[i].style.height = [...itemStartText[i].children].map(i => i.clientHeight).reduce((a,b)=>a+b) + 30 + 'px';
            }
        });
    });
    //* Список вопросов===========================================================

    //* График====================================================================
    const ctx = document.getElementById('lineChart');

    // данные для таблицы
    let uniqTableHeadRow = document.querySelectorAll('.cryptocurrency');

    console.log(document.querySelectorAll('.cryptocurrency')[0].getAttribute('data-label'));

    const createDatasets = (tag, label, color) => {
        let data = [...document.querySelectorAll(`.${tag}`)].map(i => i.innerText + '');
        if (data[0].slice(-1) === '%') {
            data = data.map(i => +i.slice(0,-1));
        }

        const datasets = {
            label,
            data,
            borderWidth: 2,
            borderColor: color,
            backgroundColor: color,
            pointBorderWidth: 2,
        };
        return datasets;
    };

    const plugin = {
        id: 'customCanvasBackgroundColor',
        beforeDraw: (chart, args, options) => {
            const {ctx} = chart;
            ctx.save();
            ctx.globalCompositeOperation = 'destination-over';
            ctx.fillStyle = options.color || '#99ffff';
            ctx.fillRect(0, 0, chart.width, chart.height);
            ctx.restore();
        }
    };

    let lineChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: createDatasets('month').data,
            datasets: [
                createDatasets('ZeroToHero', uniqTableHeadRow[0].getAttribute('data-label'), '#4C5BFF'),
                createDatasets('BitCoin', uniqTableHeadRow[1].getAttribute('data-label'), '#CFF4FF'),
                createDatasets('Ethereum', uniqTableHeadRow[2].getAttribute('data-label'), '#FFE2D6'),
            ]
        },
        options: {
            maintainAspectRatio: false,
            plugins: {
                customCanvasBackgroundColor: {
                    color: '000',
                },
                legend: {
                    labels: {
                        font: {
                            size: 14
                        },
                        boxWidth: 15
                    },
                    position: 'bottom',
                }
            },
            scales: {
                yAxes: [{
                    ticks: {
                        beingAtZero: true
                    },
                }],
                y: {
                    grid: {
                        color: '#5E5E5E'
                    }
                },
                x: {
                    grid: {
                        color: '#5E5E5E'
                    }
                }
            }
        },
        plugins: [plugin],
    });

    const uniqTableGraphButtons = document.querySelectorAll('.uniq__table-buttons button'),
          uniqTable = document.querySelector('.uniq__table'),
          uniqGraph = document.querySelector('.uniq__graph');

    

    uniqTableGraphButtons.forEach(btn => {
        btn.addEventListener('click', () => {
            if (btn.classList.contains('graph')) {
                btn.classList.add('active');
                uniqGraph.classList.add('active');
                uniqTableGraphButtons[1].classList.remove('active');
                uniqTable.classList.remove('active');
            }else if (btn.classList.contains('table')) {
                btn.classList.add('active');
                uniqTable.classList.add('active');
                uniqTableGraphButtons[0].classList.remove('active');
                uniqGraph.classList.remove('active');
            }
        });
    });
    //* График====================================================================
});
